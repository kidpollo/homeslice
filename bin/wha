#!/usr/bin/env ruby

# TODO:
# - Add usage
# - Wha whole directories e.g.: wha last week -d hashrocket

require 'rubygems'
require 'chronic'

class Wha
  def initialize(*fuzz)
    @options = extract_options!(fuzz).merge(:context => :past)
    @author = @options.delete(:author)
    @fuzz = fuzz.join(' ')
    raise ArgumentError.new("Can't parse that shiz, yo!") if day.nil?
  end

  def day
    unless @fuzz.any?
      Chronic.parse('today',@options)
    else
      Chronic.parse(@fuzz,@options)
    end
  end

  def next_day
    day + 24*60*60
  end

  def extract_options!(args)
    args.last.is_a?(Hash) ? args.pop : {}
  end

  def empty?
    git_log.strip.empty?
  end

  def git_log
    command = ["git log --since=\"#{day}\""]
    command << "--until=\"#{next_day}\"" if @fuzz
    command << "--author=\"#{@author}\"" if @author
    @log ||= `#{command.join(' ')}`
  end

  def messages(delimeter=';')
    git_log.split("\n").reverse.map do |line|
      line.gsub(/^([\da-f]{6})[\da-f]{34}/i,'\1')
    end.join("#{delimeter} \n")
  end
end

def banner(string)
  string = 'Today' if string.empty? || string.nil?
  puts '-'*40
  puts string.gsub(/\b\w/){$&.upcase}
  puts '-'*40
end

author = if arg = ARGV.detect{|a| a =~ /--author/ }
  ARGV.delete(arg)
  arg.split('=').last
end

if ARGV.join(' ').strip.downcase == 'last week'
  %w(monday tuesday wednesday thursday friday).each do |day|
    wha = Wha.new(day, :author => author)
    next if wha.empty?
    banner(day)
    #puts wha.git_log
    puts wha.messages
  end
else
  wha = Wha.new(ARGV, :author => author)
  unless wha.empty?
    banner(ARGV.join(' '))
    puts wha.messages
  end
end

